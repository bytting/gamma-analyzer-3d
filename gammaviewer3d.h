//  gamma-analyzer-3d - 3d visualization of sessions generated by gamma-analyzer
//  Copyright (C) 2017  Dag Robole
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see <http://www.gnu.org/licenses/>.

#ifndef GAMMAVIEWER3D_H
#define GAMMAVIEWER3D_H

#include "exceptions.h"
#include <map>
#include <memory>
#include <QMainWindow>
#include <QString>
#include <QCloseEvent>
#include <QLabel>
#include <Qt3DRender/QPickEvent>

namespace Ui
{
class GammaViewer3D;
}

class Scene;
class SpectrumEntity;

class GammaViewer3D : public QMainWindow
{
    Q_OBJECT

public:

    explicit GammaViewer3D(QWidget *parent = 0);
    ~GammaViewer3D() override;

protected:

    void closeEvent(QCloseEvent *event) override;

private:

    Ui::GammaViewer3D *ui;
    QLabel *labelStatus;
    std::map<QString, std::unique_ptr<Scene>> scenes;
    QString doserateScript;

    void setupWidgets();
    void setupSignals();

    const Scene &sceneFromEntity(SpectrumEntity *entity) const;

    void handleSelectSpectrum(SpectrumEntity *entity);
    void handleMarkSpectrum(SpectrumEntity *entity);

    struct Exception_NoSceneFoundForEntity : public Exception
    {
        explicit Exception_NoSceneFoundForEntity(QString source) noexcept
            : Exception("No scene found for entity: " + source) {}
    };

private slots:

    void onActionExit();
    void onOpenSession();
    void onLoadDoserateScript();
    void onSpectrumPicked(Qt3DRender::QPickEvent *event);
};

#endif // GAMMAVIEWER3D_H
