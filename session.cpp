//  gamma-analyzer-3d - 3d visualization of sessions generated by gamma-analyzer
//  Copyright (C) 2017  Dag Robole
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see <http://www.gnu.org/licenses/>.

#include "session.h"
#include <boost/filesystem.hpp>

Session::Session()
{
}

Session::~Session()
{
    clear();
}

const Spectrum* Session::getSpectrum(int idx) const
{
    return mSpecList[idx];
}

const SpecList Session::getSpectrums() const
{
    return mSpecList;
}

bool Session::load(const std::string &session_path)
{
    namespace fs = boost::filesystem;

    fs::path p(session_path);
    p.append("/json");
    if(!fs::exists(p) || !fs::is_directory(p))
        return false;

    fs::directory_iterator end_iter;
    for(fs::directory_iterator di(p); di != end_iter; ++di)
    {        
        if (!fs::is_regular_file(di->status()))
            continue;

        fs::path fp = di->path();
        if(fp.extension() != ".json")
            continue;

        Spectrum *spec = new Spectrum();
        if(spec->load(fp.string()))
            mSpecList.push_back(spec);
    }

    return true;
}

void Session::clear()
{
    for(SpecList::iterator it = mSpecList.begin(); it != mSpecList.end(); ++it)
        delete *it;
    mSpecList.clear();
}
