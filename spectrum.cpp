//  gamma-analyzer-3d - 3d visualization of sessions generated by gamma-analyzer
//  Copyright (C) 2017  Dag Robole
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see <http://www.gnu.org/licenses/>.

#include "spectrum.h"
#include <stdexcept>
#include <QJsonDocument>
#include <QJsonObject>
#include <QFile>

namespace gamma
{

Spectrum::Spectrum(QString filename)
{
    load(filename);
}

Spectrum::~Spectrum()
{
}

static QJsonDocument loadJson(QString fileName)
{
    QFile jsonFile(fileName);
    jsonFile.open(QFile::ReadOnly);
    return QJsonDocument().fromJson(jsonFile.readAll());
}

void Spectrum::load(QString filename)
{    
    QJsonDocument doc = loadJson(filename);
    if(!doc.isObject())
        throw std::runtime_error("Unable to load json document " + filename.toStdString());

    QJsonObject obj = doc.object();
    QJsonObject args = obj.value("arguments").toObject();

    latitudeStart = args.value("latitude_start").toDouble();
    latitudeEnd = args.value("latitude_end").toDouble();
    longitudeStart = args.value("longitude_start").toDouble();
    longitudeEnd = args.value("longitude_end").toDouble();
    altitudeStart = args.value("altitude_start").toDouble();
    altitudeEnd = args.value("altitude_end").toDouble();    
}

} // namespace gamma
