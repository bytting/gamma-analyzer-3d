//  gamma-analyzer-3d - 3d visualization of sessions generated by gamma-analyzer
//  Copyright (C) 2017  Dag Robole
//
//  This program is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with this program.  If not, see <http://www.gnu.org/licenses/>.

#ifndef SESSION_H
#define SESSION_H

#include "spectrum.h"
#include "exceptions.h"
#include "detectortype.h"
#include "detector.h"
#include <memory>
#include <vector>
#include <QString>

namespace gamma
{

typedef std::vector<Spectrum*> SpecList;
typedef SpecList::size_type SpecListSize;

class Session
{
public:

    Session();
    ~Session();

    const SpecList& getSpectrumList() const;
    const Spectrum* getSpectrum(SpecListSize index) const;
    SpecListSize spectrumCount() const { return mSpecList.size(); }
    void loadPath(QString sessionPath, QString geScriptFileName = QString());
    void clear();

    struct DirIsNotASession : public GammanException
    {
        explicit DirIsNotASession(QString dir) noexcept
            : GammanException("Directory is not a valid session: " + dir) {}
    };

    struct InvalidSessionFile : public GammanException
    {
        explicit InvalidSessionFile(QString filename) noexcept
            : GammanException("Invalid session file: " + filename) {}
    };

private:

    void loadSessionFile(QString sessionFile);

    QString mName;
    QString mComment;
    double mLivetime;
    int mIterations;

    DetectorType mDetectorType;
    Detector mDetector;

    SpecList mSpecList;
};

} // namespace gamma

#endif // SESSION_H
